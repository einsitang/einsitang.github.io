<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>About Me</title>
    <url>/2022/06/15/aboutme/</url>
    <content><![CDATA[<h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p>JAVA系软件工程师/基础架构师，十年开发经验，全栈到架构，现为自由工作者(大龄下岗人士<span class="github-emoji"><span>🐶</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f436.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>)</p>
<p>从事传统制造业互联网+转型、短视频、社交还有电商行业</p>
<p>热衷各种有趣的开源项目</p>
<p>时常搞点开发小创意</p>
<h1 id="Interests"><a href="#Interests" class="headerlink" title="Interests"></a>Interests</h1><ul>
<li><span class="github-emoji"><span>🏃</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
<li><span class="github-emoji"><span>🏸</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
<li><span class="github-emoji"><span>🐱</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f431.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
<li><span class="github-emoji"><span>🐶</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f436.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
<li><span class="github-emoji"><span>📖</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
<li><span class="github-emoji"><span>🎥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
<li><span class="github-emoji"><span>🎧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a7.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
</ul>
<h1 id="Idol"><a href="#Idol" class="headerlink" title="Idol"></a>Idol</h1><p><img lazyload="" src="/images/loading.svg" data-src="/images/idol_pengyuyan.jpeg" alt="彭于晏的小迷弟"></p>
<h1 id="Contacts"><a href="#Contacts" class="headerlink" title="Contacts"></a>Contacts</h1><blockquote>
<p>如果你想我了，可以用以下公开信息联系我</p>
</blockquote>
<ul>
<li>Email : <a class="link" href="mailto:my-tangjianbin@163.com">📮 mail 我<i class="fas fa-external-link-alt"></i></a></li>
<li>Github : <a class="link" href="https://github.com/einsitang">https://github.com/einsitang<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>Sudoku</title>
    <url>/2022/06/16/sudoku/</url>
    <content><![CDATA[<h1 id="数独"><a href="#数独" class="headerlink" title="数独"></a>数独</h1><blockquote>
<p><em>数独</em> 是一种数学逻辑游戏，游戏由9×9个格子组成。<br>由9个3×3个的九宫格组成。<br>每一列的数字均须包含 1～9，不能缺少，也不能重复。<br>每一宫 3*3 的九宫格)的数字均须包含 1～9，不能缺少，也不能重复。</p>
</blockquote>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>数独可以锻炼逻辑思维能力，在计算数独时也可以帮助玩家提升注意力（类比<code>舒尔特表</code>）</p>
<h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><blockquote>
<p>如何通过编写程序的方式，创作一个属于自己的数独应用🚀 ?</p>
</blockquote>
<h3 id="功能设计"><a href="#功能设计" class="headerlink" title="功能设计"></a>功能设计</h3><h4 id="计算器-解决puzzle"><a href="#计算器-解决puzzle" class="headerlink" title="计算器 - 解决puzzle"></a>计算器 - 解决puzzle</h4><p>所需算法:</p>
<ul>
<li>回溯</li>
<li>洗牌</li>
</ul>
<h4 id="生成器-生成puzzle"><a href="#生成器-生成puzzle" class="headerlink" title="生成器 - 生成puzzle"></a>生成器 - 生成puzzle</h4><p>所需算法:</p>
<ul>
<li>数独计算器</li>
<li>(按规则随机)随机挖洞</li>
<li>每次挖洞都要进行深度遍历计算验证(不再是回溯)，并且考虑是否唯一解</li>
</ul>
<h4 id="交互界面-可人机交互的产品"><a href="#交互界面-可人机交互的产品" class="headerlink" title="交互界面 - 可人机交互的产品"></a>交互界面 - 可人机交互的产品</h4><h3 id="开源实现"><a href="#开源实现" class="headerlink" title="开源实现"></a>开源实现</h3><h4 id="Lib"><a href="#Lib" class="headerlink" title="Lib"></a>Lib</h4><ul>
<li>sudoku-nodejs [ <a class="link" href="https://github.com/einsitang/sudoku-nodejs">github<i class="fas fa-external-link-alt"></i></a>  ]</li>
<li>sudoku-dart [ <a class="link" href="https://github.com/einsitang/sudoku-dart">github<i class="fas fa-external-link-alt"></i></a> ]</li>
<li>sudoku-go [<a class="link" href="https://github.com/einsitang/sudoku-go">github<i class="fas fa-external-link-alt"></i></a> ]</li>
</ul>
<h4 id="App"><a href="#App" class="headerlink" title="App"></a>App</h4><ul>
<li>sudoku-flutter [ <a class="link" href="https://github.com/einsitang/sudoku-flutter">github<i class="fas fa-external-link-alt"></i></a> | <a class="link" href="https://github.com/forfuns/sudoku-flutter/releases/download/beta-202008310040/app-release.apk">apk<i class="fas fa-external-link-alt"></i></a> ]</li>
</ul>
<h2 id="知乎相关回答"><a href="#知乎相关回答" class="headerlink" title="知乎相关回答"></a>知乎相关回答</h2><ul>
<li><a class="link" href="https://www.zhihu.com/question/280012560/answer/2531334365">如何做一个解任意数独的程序？ - 爱因斯 唐的回答 - 知乎<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <tags>
        <tag>sudoku</tag>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title>Proof Of Work 算法</title>
    <url>/2023/06/03/proof-of-work/</url>
    <content><![CDATA[<h1 id="Proof-Of-Work-算法"><a href="#Proof-Of-Work-算法" class="headerlink" title="Proof Of Work 算法"></a>Proof Of Work 算法</h1><p><strong>工作量证明</strong>(proof-of-work),概念最早由Cynthia Dwork和Moni Naor于1993年的学术论文提出,主要用于防止/阻断对服务滥用行为的一种算法对策,早期广泛应用在电子邮件服务上,对抗网络上大部分的垃圾邮件,现在是区块链加密货币共识机制之一</p>
<p>其算法主要原理是提出一个问题且需要通过复杂的计算(穷举)才可以得出答案(极可能是多个),而服务方可以简单且快速运算验证</p>
<p>假设现在服务方提供一个接口，但希望对客户方(请求方)进行一定的频率约束，从而降低接口滥用和资源成本，我们可以设计一种算法，以当前时间为题目，计算出一个字符串，使得其Hash值(假设使用MD5)包含时间戳部分截取信息,并且可以通过对时间戳和服务器当前时间进行校验,偏离过大则拒绝</p>
<h2 id="原理过程"><a href="#原理过程" class="headerlink" title="原理过程"></a>原理过程</h2><p>得出一个<code>timestamp</code>:1685808827832</p>
<p>对其后 6 位进行截取得出 827832 , 且进行十六进制处理得出 ca1b8</p>
<p>之后随机出一个值字符串 <code>randomStr</code></p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// JS 代码</span></span><br><span class="line"><span class="keyword">let</span> randomStr = <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substr</span>(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>

<p>使得 <code>md5(randomStr)</code>的值包含 <code>ca1b8</code> 则代表验证成功</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// JS 代码</span></span><br><span class="line"><span class="keyword">let</span> timestampCut = timestamp.<span class="title function_">toString</span>().<span class="title function_">substr</span>(-<span class="number">6</span>).<span class="title function_">toString</span>(<span class="number">16</span>) <span class="comment">// ca1b8</span></span><br><span class="line"><span class="title function_">md5</span>(randomStr).<span class="title function_">indexOf</span>(timestampCut) != -<span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>



<h2 id="完整代码-pow-js"><a href="#完整代码-pow-js" class="headerlink" title="完整代码 pow.js"></a>完整代码 pow.js</h2><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 使用前先安装 md5 模块 : npm install md5</span></span><br><span class="line"><span class="keyword">const</span> md5 = <span class="built_in">require</span>(<span class="string">"md5"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 时间戳截取长度 , 从后向前截取</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">LENGTH</span> = <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// check proof of work data</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkPow</span> = (<span class="params">randomTxt, timestamp</span>) =&gt; {</span><br><span class="line">    <span class="keyword">let</span> [numStr] = <span class="title function_">getTimeState</span>(timestamp)</span><br><span class="line">    <span class="keyword">let</span> randMd5Str = <span class="title function_">md5</span>(randomTxt)</span><br><span class="line">    <span class="keyword">return</span> randMd5Str.<span class="title function_">indexOf</span>(numStr) != -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取 [截取字符串,时间戳]</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> {<span class="type">long</span>} fixedTimestamp 固定时间戳，可选，如果设置了则 numStr 以该时间戳截取</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> [numStr,timestamp]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getTimeState</span> = (<span class="params">fixedTimestamp</span>) =&gt; {</span><br><span class="line">    <span class="keyword">let</span> timestamp = !!fixedTimestamp ? fixedTimestamp : <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">    <span class="keyword">if</span>(timestamp &gt;&gt;&gt; <span class="number">38</span> &lt; <span class="number">0</span>){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`<span class="subst">${timestamp}</span> is don't look like timestamp type`</span>)</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">let</span> timestampStr = timestamp.<span class="title function_">toString</span>()</span><br><span class="line">    <span class="keyword">let</span> cutTimestampStr = timestampStr.<span class="title function_">substr</span>(-<span class="variable constant_">LENGTH</span>)</span><br><span class="line">    <span class="keyword">let</span> num = <span class="title class_">Number</span>.<span class="built_in">parseInt</span>(cutTimestampStr)</span><br><span class="line">    <span class="keyword">let</span> numStr = num.<span class="title function_">toString</span>(<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span> [numStr, timestamp]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * generate proof of work data</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">pow</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">let</span> [numStr, timestamp] = <span class="title function_">getTimeState</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> md5Str = <span class="string">""</span></span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span>, maxCount = <span class="number">2000</span></span><br><span class="line">    <span class="keyword">let</span> randomStr</span><br><span class="line">    <span class="keyword">while</span> (md5Str.<span class="title function_">indexOf</span>(numStr) == -<span class="number">1</span>) {</span><br><span class="line">        randomStr = <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substr</span>(<span class="number">3</span>)</span><br><span class="line">        md5Str = <span class="title function_">md5</span>(randomStr)</span><br><span class="line">        <span class="keyword">if</span> (count++ &gt; maxCount) {</span><br><span class="line">            [numStr, timestamp] = <span class="title function_">getTimeState</span>()</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [randomStr, timestamp]</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">'exhaustive'</span>)</span><br><span class="line"><span class="keyword">let</span> [randomStr, timestamp] = <span class="title function_">pow</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">'exhaustive'</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`randomStr : <span class="subst">${randomStr}</span> hash(randomStr)=&gt; <span class="subst">${md5(randomStr)}</span> , timestamp : <span class="subst">${timestamp}</span> `</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">'check'</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`pow checkout : <span class="subst">${checkPow(randomStr, timestamp)}</span>`</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">'check'</span>)</span><br></pre></td></tr></tbody></table></figure>

<p><a class="link" href="https://gist.github.com/einsitang/7605abd76e1f723f7a0ea1ae4c3ca411">gist<i class="fas fa-external-link-alt"></i></a></p>
<p>穷举的平均时间大概 100 ms , 而验证仅需 0.1 ms</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>因为<strong>工作量证明</strong>是通过无效运算占用CPU时间,这种机制应该应用在客户端上,且也需要平衡实际的用户体验（用户设备,业务操作时长等等）</p>
<p>并且该方法 <strong>无法有效阻止</strong> 像请求回放、恶意触发 等行为，在规模严重的场景下还是需要搭配其他方案（服务器记录请求/调用信息、风控检查等等）</p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>摆脱Spring框架独立实现Java类扫描器</title>
    <url>/2023/06/11/rain-project/</url>
    <content><![CDATA[<h1 id="Rain-Project"><a href="#Rain-Project" class="headerlink" title="Rain-Project"></a>Rain-Project</h1><p>我在给我自己先挖个坑，等有空回来补全</p>
<p>基础的功能已经完成，感兴趣可以关注 <a class="link" href="https://github.com/einsitang/rain">Rain-Project<i class="fas fa-external-link-alt"></i></a></p>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>changelog</title>
    <url>/changelog/index.html</url>
    <content><![CDATA[<ul>
<li>2022.06.24<ul>
<li>添加ICP备案(是中国合法网站了<span class="github-emoji"><span>😃</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>)</li>
</ul>
</li>
<li>2022.06.17<ul>
<li>支持脑图</li>
<li>支持 github emoji</li>
<li>文章中文转拼音特性</li>
</ul>
</li>
<li>2022.06.16<ul>
<li>修正静态资源文件</li>
</ul>
</li>
<li>2022.06.15<ul>
<li>增加全文搜索支持</li>
<li>项目搭建</li>
</ul>
</li>
</ul>
<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
  </entry>
</search>
